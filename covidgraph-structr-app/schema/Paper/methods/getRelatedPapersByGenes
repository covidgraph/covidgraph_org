{
	
	const self = $.this;
	
	if(!self.paperLookUp)
	{
		const listGenes = self.getGenes();
		
		//If the paper mentions more than 50 Genes, dont get related Papers, because Paper is too unspecific
		if($.size(listGenes) > 50)
		{
			self.paperLookUp = true;
			return self.relatedPapers;
		}	
			
		let hashmap	= {};

		for (let gene of listGenes) 
		{
			gene.getPapers();

			if(gene.score < 100)
			{
				let genePapers = gene.getPapers();
				for(let paper of genePapers)
				{	
					if($.empty(hashmap[paper.id]))
						hashmap[paper.id] = [gene];
					else
						hashmap[paper.id].push(gene);
				}
			}
			delete hashmap[self.id];
		}

		let sortable = [];
		for (let paper in hashmap) 
		{
			let key   = $.find('Paper', paper);
			let value = hashmap[paper];
			let pair  = [key, value];
			sortable.push(pair);
		}

		sortable.sort(function(a, b) {
			const sizeA = a[1].length;
			const sizeB = b[1].length;
			if(sizeA > sizeB)        return -1;
			else if(sizeA === sizeB) return 0;
			else                     return 1;
		});
		
		//Remove 
		sortable = sortable.filter(paper=>paper[0].geneScore<50);
		
		let topFivePapers = sortable.slice(0,5);
		
		self.relatedPapers = topFivePapers.map(rpCollection => $.create('RelatedPaperCollection', {
			srcPaper		: self,
			referencedPaper : rpCollection[0],
			sharedGenes		: rpCollection[1]
		}));
		
		self.paperLookUp = true;
	}
	
		return self.relatedPapers;

}